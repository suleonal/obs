/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package tr.com.argela.obs.client.api;

import tr.com.argela.obs.client.model.Lecture;
import tr.com.argela.obs.client.model.ResponseEntity;
import tr.com.argela.obs.client.model.Student;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StudentControllerApi
 */
@Ignore
public class StudentControllerApiTest {

    private final StudentControllerApi api = new StudentControllerApi();

    
    /**
     * addLectureToStudent
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addLectureToStudentUsingPUTTest() {
        Long lectureId = null;
        Long studentId = null;
        String token = null;
        api.addLectureToStudentUsingPUT(lectureId, studentId, token);

        // TODO: test validations
    }
    
    /**
     * deleteById
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteByIdUsingDELETE2Test() {
        Long id = null;
        String token = null;
        ResponseEntity response = api.deleteByIdUsingDELETE2(id, token);

        // TODO: test validations
    }
    
    /**
     * deleteLectureToStudent
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteLectureToStudentUsingDELETETest() {
        Long lectureId = null;
        Long studentId = null;
        String token = null;
        api.deleteLectureToStudentUsingDELETE(lectureId, studentId, token);

        // TODO: test validations
    }
    
    /**
     * findById
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findByIdUsingGET2Test() {
        Long id = null;
        String token = null;
        ResponseEntity response = api.findByIdUsingGET2(id, token);

        // TODO: test validations
    }
    
    /**
     * getAll
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllUsingGET2Test() {
        String token = null;
        List<Student> response = api.getAllUsingGET2(token);

        // TODO: test validations
    }
    
    /**
     * getLecturesByStudentId
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLecturesByStudentIdUsingGETTest() {
        Long studentId = null;
        String token = null;
        List<Lecture> response = api.getLecturesByStudentIdUsingGET(studentId, token);

        // TODO: test validations
    }
    
    /**
     * save
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void saveUsingPOST2Test() {
        Student student = null;
        Student response = api.saveUsingPOST2(student);

        // TODO: test validations
    }
    
}
